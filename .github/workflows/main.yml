# This is a basic workflow to help you get started with the Run C/C++test action for a CMake-based project.
name: C/C++test with CMake

on:
  # Triggers the workflow on push or pull request events but only for the master (main) branch.
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  run-cpptest-make:
    name: Analyze project with C/C++test

    # Specifies the type of runner that the job will run on.
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:

    # Checks out your repository under $GITHUB_WORKSPACE, so that your job can access it.
    - name: Checkout code
      uses: actions/checkout@v2

    # Configures your CMake project. Be sure the compile_commands.json file is created.
    - name: Configure project
      run: cmake -DCPPTEST_COVERAGE=ON -S . -B .build

    # Builds your CMake project. (This step is optional, as it is not required for code analysis).
    - name: Build project (optional)
      run: cmake --build .build && cd .build && rm -rf cpptest-coverage/GooTest/GooTest.clog && ctest || true && make coverage-compute coverage-suppress coverage-report

    
    # Uploads an archive that includes all report files (.xml, .html, .sarif).
    - name: Archive reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: CpptestReports
        path: .coverage/coverage.*

